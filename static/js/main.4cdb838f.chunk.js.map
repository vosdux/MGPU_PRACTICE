{"version":3,"sources":["pages/main-page/MainPage.tsx","components/badge/Badge.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DropsEnum","Badge","children","className","ITEMS","name","id","LEFT_COLUMN_VALUES","RIGHT_COLUMN_VALUES","reorderDifferentLists","startList","endList","startIndex","endIndex","setStart","setEnd","newStartList","newEndList","splice","removed","reorder","items","setItems","newItems","console","log","MainPage","useState","leftColumn","setLeftColumn","rigthColumn","setRigthColumn","initial","setInitial","onDragEnd","result","provided","destination","destinationIndex","index","sourceIndex","source","destinationId","droppableId","sourceId","draggableId","left","find","elem","alert","right","snapshot","droppableProps","ref","innerRef","map","item","draggableProps","dragHandleProps","placeholder","direction","style","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cdb838f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport Badge from '../../components/badge/Badge';\r\n\r\nimport './styles.css';\r\n\r\nenum DropsEnum {\r\n  right = 'right',\r\n  left = 'left',\r\n  initial = 'initial'\r\n}\r\n\r\ntype ColumnItem = {\r\n  name: string;\r\n  id: string;\r\n};\r\n\r\nconst ITEMS = [{ name: 'Флешки', id: \"0\" }, { name: 'Телепортация', id: \"1\" }, { name: 'Оптоволоконная связь', id: \"2\" }, { name: 'Персональный компьютер', id: \"3\" }]\r\n\r\nconst LEFT_COLUMN_VALUES = [\"0\", \"1\", \"3\"];\r\nconst RIGHT_COLUMN_VALUES = [\"2\"];\r\n\r\nconst reorderDifferentLists = (\r\n  startList: ColumnItem[], \r\n  endList: ColumnItem[], \r\n  startIndex: number, \r\n  endIndex: number,\r\n  setStart: (items: ColumnItem[]) => void,\r\n  setEnd: (items: ColumnItem[]) => void\r\n) => {\r\n  const newStartList = [...startList];\r\n  const newEndList = [...endList]\r\n\r\n  const [removed] = newStartList.splice(startIndex, 1);\r\n  newEndList.splice(endIndex, 0, removed);\r\n\r\n  setStart(newStartList);\r\n  setEnd(newEndList);\r\n};\r\n\r\nconst reorder = (\r\n  items: ColumnItem[], \r\n  startIndex: number, \r\n  endIndex: number, \r\n  setItems: (items: ColumnItem[]) => void, \r\n) => {\r\n  const newItems = [...items];\r\n  const [removed] = newItems.splice(startIndex, 1);\r\n  console.log(removed, 're');\r\n  console.log(newItems, 'new');\r\n  newItems.splice(endIndex, 0, removed);\r\n  console.log(newItems, 'nmew2');\r\n  setItems(newItems);\r\n};\r\n\r\nconst MainPage = () => {\r\n  const [leftColumn, setLeftColumn] = useState<ColumnItem[]>([]);\r\n  const [rigthColumn, setRigthColumn] = useState<ColumnItem[]>([]);\r\n  const [initial, setInitial] = useState<ColumnItem[]>(ITEMS);\r\n\r\n  const onDragEnd = (result: DropResult, provided: ResponderProvided) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const destinationIndex = result.destination.index;\r\n    const sourceIndex = result.source.index;\r\n\r\n    const destinationId = result.destination.droppableId;\r\n    const sourceId = result.source.droppableId;\r\n\r\n    const draggableId = result.draggableId;\r\n\r\n    if (destinationId === DropsEnum.left) {\r\n      if (sourceId === DropsEnum.left) {\r\n        reorder(leftColumn, sourceIndex, destinationIndex, setLeftColumn);\r\n      } else if (LEFT_COLUMN_VALUES.find(elem => elem === draggableId)) {\r\n        reorderDifferentLists(initial, leftColumn, sourceIndex, destinationIndex, setInitial, setLeftColumn);\r\n      } else {\r\n        alert('Неверно');\r\n      }\r\n    }\r\n\r\n    if (destinationId === DropsEnum.right) {\r\n      if (sourceId === DropsEnum.right) {\r\n        reorder(rigthColumn, sourceIndex, destinationIndex, setRigthColumn);\r\n      } else if (RIGHT_COLUMN_VALUES.find(elem => elem === draggableId)) {\r\n        reorderDifferentLists(initial, rigthColumn, sourceIndex, destinationIndex, setInitial, setRigthColumn);\r\n      } else {\r\n        alert('Неверно');\r\n      }\r\n    }\r\n\r\n    if (destinationId === DropsEnum.initial) {\r\n      if (sourceId === DropsEnum.initial) {\r\n        reorder(initial, sourceIndex, destinationIndex, setInitial);\r\n      }\r\n\r\n      if (sourceId === DropsEnum.right) {\r\n        reorderDifferentLists(rigthColumn, initial, sourceIndex, destinationIndex, setInitial, setRigthColumn);\r\n      }\r\n\r\n      if (sourceId === DropsEnum.left) {\r\n        reorderDifferentLists(leftColumn, initial, sourceIndex, destinationIndex, setInitial, setLeftColumn);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='root'>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"columns\">\r\n          <Droppable droppableId={DropsEnum.left}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                className=\"column\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                <p>Вопрос 1</p>\r\n                {leftColumn.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <Badge className=\"initial-item mb-10\">\r\n                          {item.name}\r\n                        </Badge>\r\n                      </div>\r\n\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <Droppable droppableId={DropsEnum.right}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                className=\"column\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                <p>Вопрос 2</p>\r\n                {rigthColumn.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <Badge className=\"initial-item mb-10\">\r\n                          {item.name}\r\n                        </Badge>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Droppable droppableId={DropsEnum.initial} direction='horizontal'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                className=\"row\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {initial.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={{ ...provided.draggableProps.style }}\r\n                      >\r\n                        <Badge className=\"initial-item\">\r\n                          {item.name}\r\n                        </Badge>\r\n                      </div>\r\n\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { FC } from 'react'\r\n\r\nimport './styles.css';\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst Badge: FC<Props> = ({ children, className }) => {\r\n  return (\r\n    <div className={`badge ${className || ''}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import React from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\n\nimport MainPage from './pages/main-page/MainPage';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<MainPage />} />\n      <Route path=\"*\" element={<></>} />\n     </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}