{"version":3,"sources":["components/drag-n-drop/DragNDrop.tsx","components/badge/Badge.tsx","pages/d-n-d/DND.tsx","components/cards/Cards.tsx","pages/cards/CardsPage.tsx","components/columns/Columns.tsx","pages/table-page/TablePage.tsx","components/checkboxes/Checkboxes.tsx","pages/checkbox-page/CheckboxPage.tsx","pages/image-page/ImagePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DropsEnum","Badge","children","className","ITEMS","name","id","LEFT_COLUMN_VALUES","RIGHT_COLUMN_VALUES","reorderDifferentLists","startList","endList","startIndex","endIndex","setStart","setEnd","newStartList","newEndList","splice","removed","reorder","items","setItems","newItems","DragNDrop","navigate","useNavigate","useState","leftColumn","setLeftColumn","rigthColumn","setRigthColumn","initial","setInitial","onDragEnd","result","provided","destination","destinationIndex","index","sourceIndex","source","destinationId","droppableId","sourceId","draggableId","left","find","elem","alert","right","snapshot","droppableProps","ref","innerRef","map","item","draggableProps","dragHandleProps","style","placeholder","direction","onClick","sort","a","b","join","DND","cards","title","value","Cards","firstChecked","setFirstChecked","secondChecked","setSecondChecked","checked","setChecked","useEffect","setTimeout","getCardClass","some","console","log","onCardClick","length","CardsPage","labels","text","values","Columns","tableValues","setTableValues","lablesId","tableVlauesId","TablePage","CHECKBOXES","SUCCESS_VALUES","Checkboxes","setValues","type","state","filter","push","htmlFor","newValues","CheckboxPage","ImagePage","App","path","element","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac7ba8d2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable, DropResult, ResponderProvided } from \"react-beautiful-dnd\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Badge from '../../components/badge/Badge';\r\n\r\nimport './styles.css';\r\n\r\nenum DropsEnum {\r\n  right = 'right',\r\n  left = 'left',\r\n  initial = 'initial'\r\n}\r\n\r\ntype ColumnItem = {\r\n  name: string;\r\n  id: string;\r\n};\r\n\r\nconst ITEMS = [{ name: 'Флешки', id: \"0\" }, { name: 'Телепортация', id: \"1\" }, { name: 'Оптоволоконная связь', id: \"2\" }, { name: 'Персональный компьютер', id: \"3\" }]\r\n\r\nconst LEFT_COLUMN_VALUES = [\"0\", \"1\", \"3\"];\r\nconst RIGHT_COLUMN_VALUES = [\"2\"];\r\n\r\nconst reorderDifferentLists = (\r\n  startList: ColumnItem[],\r\n  endList: ColumnItem[],\r\n  startIndex: number,\r\n  endIndex: number,\r\n  setStart: (items: ColumnItem[]) => void,\r\n  setEnd: (items: ColumnItem[]) => void\r\n) => {\r\n  const newStartList = [...startList];\r\n  const newEndList = [...endList]\r\n\r\n  const [removed] = newStartList.splice(startIndex, 1);\r\n  newEndList.splice(endIndex, 0, removed);\r\n\r\n  setStart(newStartList);\r\n  setEnd(newEndList);\r\n};\r\n\r\nconst reorder = (\r\n  items: ColumnItem[],\r\n  startIndex: number,\r\n  endIndex: number,\r\n  setItems: (items: ColumnItem[]) => void,\r\n) => {\r\n  const newItems = [...items];\r\n  const [removed] = newItems.splice(startIndex, 1);\r\n\r\n  newItems.splice(endIndex, 0, removed);\r\n\r\n  setItems(newItems);\r\n};\r\n\r\nconst DragNDrop = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [leftColumn, setLeftColumn] = useState<ColumnItem[]>([]);\r\n  const [rigthColumn, setRigthColumn] = useState<ColumnItem[]>([]);\r\n  const [initial, setInitial] = useState<ColumnItem[]>(ITEMS);\r\n\r\n  const onDragEnd = (result: DropResult, provided: ResponderProvided) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const destinationIndex = result.destination.index;\r\n    const sourceIndex = result.source.index;\r\n\r\n    const destinationId = result.destination.droppableId;\r\n    const sourceId = result.source.droppableId;\r\n\r\n    const draggableId = result.draggableId;\r\n\r\n    if (destinationId === DropsEnum.left) {\r\n      if (sourceId === DropsEnum.left) {\r\n        reorder(leftColumn, sourceIndex, destinationIndex, setLeftColumn);\r\n      } else if (LEFT_COLUMN_VALUES.find(elem => elem === draggableId)) {\r\n        reorderDifferentLists(initial, leftColumn, sourceIndex, destinationIndex, setInitial, setLeftColumn);\r\n      } else {\r\n        alert('Неверно');\r\n      }\r\n    }\r\n\r\n    if (destinationId === DropsEnum.right) {\r\n      if (sourceId === DropsEnum.right) {\r\n        reorder(rigthColumn, sourceIndex, destinationIndex, setRigthColumn);\r\n      } else if (RIGHT_COLUMN_VALUES.find(elem => elem === draggableId)) {\r\n        reorderDifferentLists(initial, rigthColumn, sourceIndex, destinationIndex, setInitial, setRigthColumn);\r\n      } else {\r\n        alert('Неверно');\r\n      }\r\n    }\r\n\r\n    if (destinationId === DropsEnum.initial) {\r\n      if (sourceId === DropsEnum.initial) {\r\n        reorder(initial, sourceIndex, destinationIndex, setInitial);\r\n      }\r\n\r\n      if (sourceId === DropsEnum.right) {\r\n        reorderDifferentLists(rigthColumn, initial, sourceIndex, destinationIndex, setInitial, setRigthColumn);\r\n      }\r\n\r\n      if (sourceId === DropsEnum.left) {\r\n        reorderDifferentLists(leftColumn, initial, sourceIndex, destinationIndex, setInitial, setLeftColumn);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = () =>{\r\n    const left = leftColumn.map(({ id }) => id);\r\n    const right = rigthColumn.map(({ id }) => id);\r\n    left.sort((a, b) => +a - +b);\r\n\r\n    if (left.join() === LEFT_COLUMN_VALUES.join() && right.join() === RIGHT_COLUMN_VALUES.join()) {\r\n      navigate('/MGPU_PRACTICE/cards');\r\n    } else {\r\n      alert('Неверно!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='root'>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <p>Вопрос 1</p>\r\n            <Droppable droppableId={DropsEnum.left}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  className='dropable'\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n\r\n                  {leftColumn.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                      {(provided, snapshot) => (\r\n\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={{ ...provided.draggableProps.style }}\r\n                        >\r\n                          <Badge className=\"initial-item mb-10\">\r\n                            {item.name}\r\n                          </Badge>\r\n                        </div>\r\n\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n          <div className=\"column\">\r\n            <p>Вопрос 1</p>\r\n            <Droppable droppableId={DropsEnum.right}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  className=\"dropable\"\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {rigthColumn.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <Badge className=\"initial-item mb-10\">\r\n                            {item.name}\r\n                          </Badge>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Droppable droppableId={DropsEnum.initial} direction='horizontal'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                className=\"row\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {initial.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={{ ...provided.draggableProps.style }}\r\n                      >\r\n                        <Badge className=\"initial-item\">\r\n                          {item.name}\r\n                        </Badge>\r\n                      </div>\r\n\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n      <button onClick={onSubmit} className='button'>Проверить</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragNDrop;\r\n","import React, { FC } from 'react'\r\n\r\nimport './styles.css';\r\n\r\ntype Props = {\r\n  className?: string;\r\n}\r\n\r\nconst Badge: FC<Props> = ({ children, className }) => {\r\n  return (\r\n    <div className={`badge ${className || ''}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import DragNDrop from '../../components/drag-n-drop/DragNDrop';\r\n\r\nimport './styles.css';\r\n\r\nconst DND = () => {\r\n\r\n  return (\r\n    <div className='main'>\r\n      <DragNDrop />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DND;\r\n","import React, { FC, useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nconst cards = [\r\n  { title: 'Текст1', value: '1', id: '1' },\r\n  { title: 'Текст2', value: '2', id: '2' },\r\n  { title: 'Текст3', value: '3', id: '3' },\r\n  { title: 'Текст1', value: '1', id: '4' },\r\n  { title: 'Текст2', value: '2', id: '5' },\r\n  { title: 'Текст3', value: '3', id: '6' },\r\n];\r\n\r\nconst Cards: FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [firstChecked, setFirstChecked] = useState('');\r\n  const [secondChecked, setSecondChecked] = useState('');\r\n  const [checked, setChecked] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    const checkItems = () => {\r\n      const firstValue = cards.find(elem => elem.id === firstChecked)?.value;\r\n      const secondValue = cards.find(elem => elem.id === secondChecked)?.value;\r\n\r\n      if (firstValue === secondValue) {\r\n        setChecked(value => {\r\n          return [...value, firstChecked, secondChecked];\r\n        });\r\n      }\r\n      setFirstChecked('');\r\n      setSecondChecked('');\r\n    }\r\n\r\n    if (firstChecked !== '' && secondChecked !== '') {\r\n      setTimeout(checkItems, 100);\r\n    }\r\n  }, [firstChecked, secondChecked]);\r\n\r\n  const getCardClass = (id: string) => {\r\n    if (id === firstChecked || id === secondChecked || checked.some(elem => elem === id)) {\r\n      return 'card flipped';\r\n    } else {\r\n      return 'card';\r\n    }\r\n  };\r\n\r\n  const onCardClick = (id: string) => {\r\n    if (checked.some(elem => elem === id)) {\r\n      return false;\r\n    }\r\n\r\n    console.log(firstChecked);\r\n    console.log(secondChecked);\r\n\r\n    if (secondChecked) {\r\n      return false;\r\n    }\r\n\r\n    if (firstChecked) {\r\n      setSecondChecked(id);\r\n    } else {\r\n      setFirstChecked(id);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (checked.length === 6) {\r\n      navigate('/MGPU_PRACTICE/table');\r\n    } else {\r\n      alert('Неверно!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='card-row'>\r\n        {cards.map(({ title, id }) => {\r\n          return (\r\n            <div key={id} className={getCardClass(id)} onClick={() => onCardClick(id)}>\r\n              <div className='card__face card__face--front'></div>\r\n              <div className='card__face card__face--back'>{title}</div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <button onClick={onSubmit} className='button'>Проверить</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import Cards from \"../../components/cards/Cards\";\r\n\r\n\r\nconst CardsPage = () => {\r\n  return (\r\n    <div className='main'>\r\n      <Cards />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardsPage;\r\n","import React, { FC, useState } from 'react'\r\nimport { DragDropContext, Draggable, Droppable, DropResult, ResponderProvided } from 'react-beautiful-dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nconst labels = [\r\n  { text: 'Столбик 1', value: '1' },\r\n  { text: 'Столбик 2', value: '2' },\r\n  { text: 'Столбик 3', value: '3' },\r\n  { text: 'Столбик 4', value: '4' },\r\n];\r\n\r\nconst values = [\r\n  { text: 'Значение 2', value: '2' },\r\n  { text: 'Значение 4', value: '4' },\r\n  { text: 'Значение 1', value: '1' },\r\n  { text: 'Значение 3', value: '3' },\r\n];\r\n\r\ntype Column = {\r\n  text: string;\r\n  value: string;\r\n}\r\n\r\nconst reorder = (\r\n  items: Column[],\r\n  startIndex: number,\r\n  endIndex: number,\r\n  setItems: (items: Column[]) => void,\r\n) => {\r\n  const newItems = [...items];\r\n  const [removed] = newItems.splice(startIndex, 1);\r\n\r\n  newItems.splice(endIndex, 0, removed);\r\n\r\n  setItems(newItems);\r\n};\r\n\r\nconst Columns: FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [tableValues, setTableValues] = useState<Column[]>(values);\r\n\r\n  const onDragEnd = (result: DropResult, provided: ResponderProvided) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const destinationIndex = result.destination.index;\r\n    const sourceIndex = result.source.index;\r\n\r\n    reorder(tableValues, sourceIndex, destinationIndex, setTableValues);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const lablesId = labels.map(item => item.value);\r\n    const tableVlauesId = tableValues.map(item => item.value);\r\n    \r\n    if (lablesId.join() === tableVlauesId.join()) {\r\n      navigate('/MGPU_PRACTICE/checkboxes');\r\n    } else {\r\n      alert('Попробуйте еще раз!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className='table-container'>\r\n        <div className='table'>\r\n          <div className='table-column'>\r\n            {labels.map(({ text, value }) => (\r\n              <div className='table-item'>{text}</div>\r\n            ))}\r\n          </div>\r\n          <Droppable droppableId='s'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                className='table-column'\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {tableValues.map(({ text, value }, index) => (\r\n                  <Draggable key={value} draggableId={value} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div className='table-item' ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={{ ...provided.draggableProps.style }}>\r\n                        {text}\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n      <button onClick={onSubmit} className='button'>Проверить</button>\r\n    </DragDropContext>\r\n  );\r\n\r\n};\r\n\r\nexport default Columns;\r\n","import Columns from \"../../components/columns/Columns\";\r\n\r\nconst TablePage = () => {\r\n  return (\r\n    <div className='main'>\r\n      <Columns />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TablePage;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nconst CHECKBOXES = [\r\n  { title: 'Текст 1', value: 1, id: '1' },\r\n  { title: 'Текст 2', value: 2, id: '2' },\r\n  { title: 'Текст 3', value: 3, id: '3' },\r\n  { title: 'Текст 4', value: 4, id: '4' },\r\n  { title: 'Текст 5', value: 5, id: '5' },\r\n];\r\n\r\nconst SUCCESS_VALUES = [2, 5];\r\n\r\nconst Checkboxes = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState<number[]>([]);\r\n\r\n  const onClick = (value: number) => {\r\n    setValues(state => {\r\n      if (state.some(elem => elem === value)) {\r\n        state = state.filter(elem => elem !== value);\r\n      } else {\r\n        console.log('add');\r\n        state.push(value);\r\n      }\r\n      \r\n      return state\r\n    })\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const newValues = [...values];\r\n    newValues.sort((a, b) => a - b);\r\n\r\n    if (newValues.join() === SUCCESS_VALUES.join()) {\r\n      navigate('/MGPU_PRACTICE/image');\r\n    } else {\r\n      alert('Неверно!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='ch-page'>\r\n      {CHECKBOXES.map(({ title, value, id }) => (\r\n        <div className='ch-container'>\r\n          <input type=\"checkbox\" id={id} name={id} value={value} className=\"custom-checkbox\" onClick={() => onClick(value)}/>\r\n          <label htmlFor={id}>{title}</label>\r\n        </div>\r\n      ))}\r\n      <button onClick={onSubmit} className='button'>Проверить</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkboxes\r\n","import React from 'react'\r\nimport Checkboxes from '../../components/checkboxes/Checkboxes';\r\n\r\nconst CheckboxPage = () => {\r\n  return (\r\n    <Checkboxes />\r\n    );\r\n};\r\n\r\nexport default CheckboxPage;\r\n","import React from 'react'\r\n\r\nconst ImagePage = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePage;\r\n","import React from 'react';\r\nimport { Routes, Route, BrowserRouter, Navigate, HashRouter } from 'react-router-dom';\r\n\r\nimport DND from './pages/d-n-d/DND';\r\nimport CardsPage from './pages/cards/CardsPage';\r\nimport TablePage from './pages/table-page/TablePage';\r\nimport CheckboxPage from './pages/checkbox-page/CheckboxPage';\r\nimport ImagePage from './pages/image-page/ImagePage';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/MGPU_PRACTICE\" element={<DND />} />\r\n        <Route path=\"/MGPU_PRACTICE/cards\" element={<CardsPage />} />\r\n        <Route path=\"/MGPU_PRACTICE/table\" element={<TablePage />} />\r\n        <Route path=\"/MGPU_PRACTICE/checkboxes\" element={<CheckboxPage />} />\r\n        <Route path=\"/MGPU_PRACTICE/image\" element={<ImagePage />} />\r\n        <Route\r\n          path=\"*\"\r\n          element={<Navigate to=\"/\" />}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}